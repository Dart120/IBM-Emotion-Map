{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js\";\nimport React from \"react\";\nimport \"../index.css\";\nimport Mapp from './Mapp';\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport datum from '../daniel.json';\n\nfunction Map(props) {\n  var width = 960,\n      height = 1160;\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    width: width,\n    height: height,\n    projectionConfig: {\n      center: [0, 55.4],\n      rotation: [4.4, 0, 0],\n      parallels: [50, 60],\n      scale: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: datum,\n      children: ({\n        geographies\n      }) => geographies.map((geo, index) => {\n        if (1) {\n          if (geo) {\n            console.log(geo);\n          } // return(\n          //   <Geography style={{\n          //     default: {\n          //        fill: \"black\",\n          //        stroke: \"#607D8B\",\n          //        strokeWidth: 0.75,\n          //        outline: \"none\",\n          //     },\n          //     hover: {\n          //        fill: \"red\",\n          //        stroke: \"#607D8B\",\n          //        strokeWidth: 1,\n          //        outline: \"none\",\n          //     },\n          //     pressed: {\n          //        fill: \"blue\",\n          //        stroke: \"#607D8B\",\n          //        strokeWidth: 1,\n          //        outline: \"none\",\n          //     }\n          //  }} stroke='black' key={index} geography={geo} />\n          //     )\n\n\n          return /*#__PURE__*/_jsxDEV(\"path\", {\n            stroke: \"black\",\n            fill: \"none\",\n            d: geo.svgPath\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this);\n        } else {\n          console.log(geo);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js"],"names":["React","Mapp","d3","topojson","ComposableMap","Geographies","Geography","datum","Map","props","width","height","center","rotation","parallels","scale","geographies","map","geo","index","console","log","svgPath"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAIC,KAAK,GAAG,GAAZ;AAAA,MACAC,MAAM,GAAG,IADT;AAEA,sBAIE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAtB;AAA6B,IAAA,MAAM,EAAEC,MAArC;AAA8C,IAAA,gBAAgB,EAAI;AAACC,MAAAA,MAAM,EAAC,CAAC,CAAD,EAAI,IAAJ,CAAR;AAAkBC,MAAAA,QAAQ,EAAC,CAAC,GAAD,EAAK,CAAL,EAAO,CAAP,CAA3B;AAAqCC,MAAAA,SAAS,EAAC,CAAC,EAAD,EAAI,EAAJ,CAA/C;AAAuDC,MAAAA,KAAK,EAAE;AAA9D,KAAlE;AAAA,2BACA,QAAC,WAAD;AAAa,MAAA,SAAS,EAAER,KAAxB;AAAA,gBACG,CAAC;AAAES,QAAAA;AAAF,OAAD,KACCA,WAAW,CAACC,GAAZ,CAAgB,CAACC,GAAD,EAAKC,KAAL,KAAe;AAE7B,YAAI,CAAJ,EAAM;AACJ,cAAID,GAAJ,EAAQ;AACNE,YAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,WAHG,CAKJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,8BACA;AAAM,YAAA,MAAM,EAAC,OAAb;AAAqB,YAAA,IAAI,EAAC,MAA1B;AAAiC,YAAA,CAAC,EAAEA,GAAG,CAACI;AAAxC;AAAA;AAAA;AAAA;AAAA,kBADA;AAGD,SA9BD,MA+BI;AACFF,UAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD;AAEJ,OArCC;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAJF;AAmDD;;KAtDQV,G;AAwDT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n\nimport \"../index.css\";\nimport Mapp from './Mapp'\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport datum from '../daniel.json'\n\n\nfunction Map(props) {\n  var width = 960,\n  height = 1160;\n  return (\n  \n      \n   \n    <ComposableMap width={width} height={height}  projectionConfig = {{center:[0, 55.4],rotation:[4.4,0,0],parallels:[50,60],scale: 100}}>\n    <Geographies geography={datum}>\n      {({ geographies }) =>\n        geographies.map((geo,index) => {\n          \n          if (1){\n            if (geo){\n              console.log(geo)\n            }\n            \n            // return(\n            //   <Geography style={{\n            //     default: {\n            //        fill: \"black\",\n            //        stroke: \"#607D8B\",\n            //        strokeWidth: 0.75,\n            //        outline: \"none\",\n            //     },\n            //     hover: {\n            //        fill: \"red\",\n            //        stroke: \"#607D8B\",\n            //        strokeWidth: 1,\n            //        outline: \"none\",\n            //     },\n            //     pressed: {\n            //        fill: \"blue\",\n            //        stroke: \"#607D8B\",\n            //        strokeWidth: 1,\n            //        outline: \"none\",\n            //     }\n            //  }} stroke='black' key={index} geography={geo} />\n            //     )\n            return(\n            <path stroke='black' fill='none' d={geo.svgPath}></path>\n            )\n          }\n          else{\n            console.log(geo)\n          }\n        \n      })\n      }\n    </Geographies>\n  </ComposableMap>\n    \n        \n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Region.js\";\nimport React, { useState } from \"react\";\nimport \"../index.css\";\nimport { Geography } from \"react-simple-maps\";\n\nfunction Region(props) {\n  let {\n    setCurrentRegion,\n    colour,\n    geo,\n    geo: {\n      properties: {\n        name\n      },\n      rsmKey\n    }\n  } = props;\n\n  function handleClick() {}\n\n  return /*#__PURE__*/_jsxDEV(Geography, {\n    onClick: () => handleClick(),\n    onHover: () => handle(),\n    name: name,\n    fill: colour,\n    stroke: \"black\",\n    geography: geo\n  }, rsmKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Region;\n;\nexport default Region;\n\nvar _c;\n\n$RefreshReg$(_c, \"Region\");","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Region.js"],"names":["React","useState","Geography","Region","props","setCurrentRegion","colour","geo","properties","name","rsmKey","handleClick","handle"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,mBAA1B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,MAAI;AAACC,IAAAA,gBAAD;AAAmBC,IAAAA,MAAnB;AAA0BC,IAAAA,GAA1B;AAA+BA,IAAAA,GAAG,EAAG;AAACC,MAAAA,UAAU,EAAG;AAACC,QAAAA;AAAD,OAAd;AAAsBC,MAAAA;AAAtB;AAArC,MAAsEN,KAA1E;;AACA,WAASO,WAAT,GAAsB,CAErB;;AAED,sBACI,QAAC,SAAD;AAAW,IAAA,OAAO,EAAI,MAAMA,WAAW,EAAvC;AAA2C,IAAA,OAAO,EAAI,MAAMC,MAAM,EAAlE;AAAsE,IAAA,IAAI,EAAIH,IAA9E;AAAoF,IAAA,IAAI,EAAEH,MAA1F;AAAkG,IAAA,MAAM,EAAC,OAAzG;AAA8H,IAAA,SAAS,EAAEC;AAAzI,KAAsHG,MAAtH;AAAA;AAAA;AAAA;AAAA,UADJ;AAIH;;KAVQP,M;AAUR;AAED,eAAeA,MAAf","sourcesContent":["import React, {useState} from \"react\";\nimport \"../index.css\";\nimport { Geography } from \"react-simple-maps\";\n\nfunction Region(props) {\n    let {setCurrentRegion, colour,geo, geo : {properties : {name}, rsmKey}} = props\n    function handleClick(){\n\n    }\n\n    return (\n        <Geography onClick = {() => handleClick()} onHover = {() => handle()} name = {name} fill={colour} stroke='black' key={rsmKey} geography={geo} />\n    )\n    \n};\n  \nexport default Region;\n  "]},"metadata":{},"sourceType":"module"}
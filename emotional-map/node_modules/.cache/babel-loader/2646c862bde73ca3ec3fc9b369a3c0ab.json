{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js\";\nimport React from \"react\";\nimport \"../index.css\";\nimport Mapp from './Mapp';\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport datum from '../daniel.json';\n\nfunction Map(props) {\n  var width = 960,\n      height = 1160;\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    width: width,\n    height: height,\n    projectionConfig: {\n      center: [0, 55.4],\n      rotation: [4.4, 0, 0],\n      parallels: [50, 60],\n      scale: 100\n    },\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: datum,\n      children: ({\n        geographies\n      }) => geographies.filter(feature => feature.properties.NAME_0 == 'United Kingdom').map(geo => {\n        if (geo.rsmKey == '') {}\n\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: \"none\",\n          stroke: \"red\"\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this) // <Mapp></Mapp>\n  ;\n}\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js"],"names":["React","Mapp","d3","topojson","ComposableMap","Geographies","Geography","datum","Map","props","width","height","center","rotation","parallels","scale","geographies","filter","feature","properties","NAME_0","map","geo","rsmKey"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAIC,KAAK,GAAG,GAAZ;AAAA,MACAC,MAAM,GAAG,IADT;AAEA,sBAIE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAED,KAAtB;AAA6B,IAAA,MAAM,EAAEC,MAArC;AAA8C,IAAA,gBAAgB,EAAI;AAACC,MAAAA,MAAM,EAAC,CAAC,CAAD,EAAI,IAAJ,CAAR;AAAkBC,MAAAA,QAAQ,EAAC,CAAC,GAAD,EAAK,CAAL,EAAO,CAAP,CAA3B;AAAqCC,MAAAA,SAAS,EAAC,CAAC,EAAD,EAAI,EAAJ,CAA/C;AAAuDC,MAAAA,KAAK,EAAE;AAA9D,KAAlE;AAAA,2BACA,QAAC,WAAD;AAAa,MAAA,SAAS,EAAER,KAAxB;AAAA,gBACG,CAAC;AAAES,QAAAA;AAAF,OAAD,KACCA,WAAW,CAACC,MAAZ,CAAmBC,OAAO,IAAIA,OAAO,CAACC,UAAR,CAAmBC,MAAnB,IAA6B,gBAA3D,EACCC,GADD,CACKC,GAAG,IAAI;AACV,YAAIA,GAAG,CAACC,MAAJ,IAAc,EAAlB,EAAqB,CAAE;;AACvB,4BACA,QAAC,SAAD;AAEE,UAAA,SAAS,EAAED,GAFb;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,MAAM,EAAC;AAJT,WACOA,GAAG,CAACC,MADX;AAAA;AAAA;AAAA;AAAA,gBADA;AAOA,OAVF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UAJF,CA4BE;AA5BF;AA+BD;;KAlCQf,G;AAoCT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n\nimport \"../index.css\";\nimport Mapp from './Mapp'\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport datum from '../daniel.json'\n\n\nfunction Map(props) {\n  var width = 960,\n  height = 1160;\n  return (\n  \n      \n   \n    <ComposableMap width={width} height={height}  projectionConfig = {{center:[0, 55.4],rotation:[4.4,0,0],parallels:[50,60],scale: 100}}>\n    <Geographies geography={datum}>\n      {({ geographies }) =>\n        geographies.filter(feature => feature.properties.NAME_0 == 'United Kingdom')\n        .map(geo => {\n          if (geo.rsmKey == ''){}\n          return(\n          <Geography\n            key={geo.rsmKey}\n            geography={geo}\n            fill=\"none\"\n            stroke=\"red\"\n          />\n        )})\n        }\n        \n            \n          \n         \n        \n      \n      \n    </Geographies>\n  </ComposableMap>\n    // <Mapp></Mapp>\n        \n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}
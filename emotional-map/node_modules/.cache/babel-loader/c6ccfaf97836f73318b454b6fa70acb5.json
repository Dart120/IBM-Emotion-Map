{"ast":null,"code":"var extend = require('./extend.js');\n\nvar converter = require('./converter.js'); //g2svg as geojson2svg (shorthand)\n\n\nvar g2svg = function (options) {\n  this.options = options || {};\n  this.viewportSize = this.options.viewportSize || {\n    width: 256,\n    height: 256\n  };\n  this.mapExtent = this.options.mapExtent || {\n    left: -20037508.342789244,\n    right: 20037508.342789244,\n    bottom: -20037508.342789244,\n    top: 20037508.342789244\n  };\n  this.res = this.calResolution(this.mapExtent, this.viewportSize, this.options.fitTo);\n};\n\ng2svg.prototype.calResolution = function (extent, size, fitTo) {\n  var xres = (extent.right - extent.left) / size.width;\n  var yres = (extent.top - extent.bottom) / size.height;\n\n  if (fitTo) {\n    if (fitTo.toLowerCase() === 'width') {\n      return xres;\n    } else if (fitTo.toLowerCase() === 'height') {\n      return yres;\n    } else {\n      throw new Error('\"fitTo\" option should be \"width\" or \"height\" ');\n    }\n  } else {\n    return Math.max(xres, yres);\n  }\n};\n\ng2svg.prototype.convert = function (geojson, options) {\n  var opt = extend(this.options, options || {});\n  var multiGeometries = ['MultiPoint', 'MultiLineString', 'MultiPolygon'];\n  var geometries = ['Point', 'LineString', 'Polygon'];\n  var svgElements = [];\n\n  if (geojson.type == 'FeatureCollection') {\n    for (var i = 0; i < geojson.features.length; i++) {\n      svgElements = svgElements.concat(this.convertFeature(geojson.features[i], opt));\n    }\n  } else if (geojson.type == 'Feature') {\n    svgElements = this.convertFeature(geojson, opt);\n  } else if (geojson.type == 'GeometryCollection') {\n    for (var i = 0; i < geojson.geometries.length; i++) {\n      svgElements = svgElements.concat(this.convertGeometry(geojson.geometries[i], opt));\n    }\n  } else if (converter[geojson.type]) {\n    svgElements = this.convertGeometry(geojson, opt);\n  } else {\n    return;\n  }\n\n  if (opt.callback) opt.callback.call(this, svgElements);\n  return svgElements;\n};\n\ng2svg.prototype.convertFeature = function (feature, options) {\n  if (!feature && !feature.geometry) return;\n  var opt = extend(this.options, options || {});\n\n  if (opt.attributes && opt.attributes instanceof Array) {\n    var arr = opt.attributes;\n    opt.attributes = arr.reduce(function (sum, property) {\n      if (typeof property === 'string') {\n        var val,\n            key = property.split('.').pop();\n\n        try {\n          val = valueAt(feature, property);\n        } catch (e) {\n          val = false;\n        }\n\n        if (val) sum[key] = val;\n      } else if (typeof property === 'object' && property.type && property.property) {\n        if (property.type === 'dynamic') {\n          var val,\n              key = property.key ? property.key : property.property.split('.').pop();\n\n          try {\n            val = valueAt(feature, property.property);\n          } catch (e) {\n            val = false;\n          }\n\n          if (val) sum[key] = val;\n        } else if (property.type === 'static' && property.value) {\n          sum[property.property] = property.value;\n        }\n      }\n\n      return sum;\n    }, {});\n  } else {\n    opt.attributes = opt.attributes || {};\n  }\n\n  var id = opt.attributes.id || feature.id || (feature.properties && feature.properties.id ? feature.properties.id : null);\n  if (id) opt.attributes.id = id;\n  return this.convertGeometry(feature.geometry, opt);\n};\n\ng2svg.prototype.convertGeometry = function (geom, options) {\n  if (converter[geom.type]) {\n    var opt = extend(this.options, options || {});\n    var output = opt.output || 'svg';\n    var paths = converter[geom.type].call(this, geom, this.res, {\n      x: this.mapExtent.left,\n      y: this.mapExtent.top\n    }, opt);\n    var svgJsons, svgEles;\n\n    if (output.toLowerCase() == 'svg') {\n      svgJsons = paths.map(function (path) {\n        return pathToSvgJson(path, geom.type, opt.attributes, opt);\n      });\n      svgEles = svgJsons.map(function (json) {\n        return jsonToSvgElement(json, geom.type, opt);\n      });\n      return svgEles;\n    } else {\n      return paths;\n    }\n  } else {\n    return;\n  }\n};\n\nfunction pathToSvgJson(path, type, attributes, opt) {\n  var svg = {};\n  var pointAsCircle = opt && opt.hasOwnProperty('pointAsCircle') ? opt.pointAsCircle : false;\n\n  if ((type == 'Point' || type == 'MultiPoint') && pointAsCircle) {\n    svg['cx'] = path.split(',')[0];\n    svg['cy'] = path.split(',')[1];\n    svg['r'] = opt && opt.r ? opt.r : '1';\n  } else {\n    svg = {\n      d: path\n    };\n\n    if (type == 'Polygon' || type == 'MultiPolygon') {\n      svg['fill-rule'] == 'evenodd';\n    }\n  }\n\n  for (var key in attributes) {\n    svg[key] = attributes[key];\n  }\n\n  return svg;\n}\n\n;\n\nfunction jsonToSvgElement(json, type, opt) {\n  var pointAsCircle = opt && opt.hasOwnProperty('pointAsCircle') ? opt.pointAsCircle : false;\n  var ele = '<path';\n\n  if ((type == 'Point' || type == 'MultiPoint') && pointAsCircle) {\n    ele = '<circle';\n  }\n\n  for (var key in json) {\n    ele += ' ' + key + '=\"' + json[key] + '\"';\n  }\n\n  ele += '/>';\n  return ele;\n}\n\nfunction valueAt(obj, path) {\n  //taken from http://stackoverflow.com/a/6394168/713573\n  function index(prev, cur, i, arr) {\n    if (prev.hasOwnProperty(cur)) {\n      return prev[cur];\n    } else {\n      throw new Error(arr.slice(0, i + 1).join('.') + ' is not a valid property path');\n    }\n  }\n\n  return path.split('.').reduce(index, obj);\n}\n\nmodule.exports = g2svg;","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/node_modules/geojson2svg/src/instance.js"],"names":["extend","require","converter","g2svg","options","viewportSize","width","height","mapExtent","left","right","bottom","top","res","calResolution","fitTo","prototype","extent","size","xres","yres","toLowerCase","Error","Math","max","convert","geojson","opt","multiGeometries","geometries","svgElements","type","i","features","length","concat","convertFeature","convertGeometry","callback","call","feature","geometry","attributes","Array","arr","reduce","sum","property","val","key","split","pop","valueAt","e","value","id","properties","geom","output","paths","x","y","svgJsons","svgEles","map","path","pathToSvgJson","json","jsonToSvgElement","svg","pointAsCircle","hasOwnProperty","r","d","ele","obj","index","prev","cur","slice","join","module","exports"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,gBAAD,CAAvB,C,CAEA;;;AACA,IAAIE,KAAK,GAAG,UAASC,OAAT,EAAkB;AAC5B,OAAKA,OAAL,GAAeA,OAAO,IAAI,EAA1B;AACA,OAAKC,YAAL,GAAoB,KAAKD,OAAL,CAAaC,YAAb,IAClB;AAACC,IAAAA,KAAK,EAAE,GAAR;AAAaC,IAAAA,MAAM,EAAE;AAArB,GADF;AAEA,OAAKC,SAAL,GAAiB,KAAKJ,OAAL,CAAaI,SAAb,IACf;AACEC,IAAAA,IAAI,EAAE,CAAC,kBADT;AAEEC,IAAAA,KAAK,EAAE,kBAFT;AAGEC,IAAAA,MAAM,EAAE,CAAC,kBAHX;AAIEC,IAAAA,GAAG,EAAE;AAJP,GADF;AAOA,OAAKC,GAAL,GAAW,KAAKC,aAAL,CAAmB,KAAKN,SAAxB,EAAkC,KAAKH,YAAvC,EACT,KAAKD,OAAL,CAAaW,KADJ,CAAX;AAED,CAbD;;AAcAZ,KAAK,CAACa,SAAN,CAAgBF,aAAhB,GAAgC,UAASG,MAAT,EAAgBC,IAAhB,EAAqBH,KAArB,EAA4B;AAC1D,MAAII,IAAI,GAAG,CAACF,MAAM,CAACP,KAAP,GAAeO,MAAM,CAACR,IAAvB,IAA6BS,IAAI,CAACZ,KAA7C;AACA,MAAIc,IAAI,GAAG,CAACH,MAAM,CAACL,GAAP,GAAaK,MAAM,CAACN,MAArB,IAA6BO,IAAI,CAACX,MAA7C;;AACA,MAAIQ,KAAJ,EAAW;AACT,QAAIA,KAAK,CAACM,WAAN,OAAwB,OAA5B,EAAqC;AACnC,aAAOF,IAAP;AACD,KAFD,MAEO,IAAIJ,KAAK,CAACM,WAAN,OAAwB,QAA5B,EAAsC;AAC3C,aAAOD,IAAP;AACD,KAFM,MAEA;AACL,YAAM,IAAIE,KAAJ,CAAU,+CAAV,CAAN;AACD;AACF,GARD,MAQO;AACL,WAAOC,IAAI,CAACC,GAAL,CAASL,IAAT,EAAcC,IAAd,CAAP;AACD;AACF,CAdD;;AAeAjB,KAAK,CAACa,SAAN,CAAgBS,OAAhB,GAA0B,UAASC,OAAT,EAAiBtB,OAAjB,EAA2B;AACnD,MAAIuB,GAAG,GAAG3B,MAAM,CAAC,KAAKI,OAAN,EAAeA,OAAO,IAAI,EAA1B,CAAhB;AACA,MAAIwB,eAAe,GAAG,CAAC,YAAD,EAAc,iBAAd,EAAgC,cAAhC,CAAtB;AACA,MAAIC,UAAU,GAAG,CAAC,OAAD,EAAU,YAAV,EAAwB,SAAxB,CAAjB;AACA,MAAIC,WAAW,GAAG,EAAlB;;AACA,MAAIJ,OAAO,CAACK,IAAR,IAAgB,mBAApB,EAAyC;AACvC,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEN,OAAO,CAACO,QAAR,CAAiBC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC5CF,MAAAA,WAAW,GAAGA,WAAW,CAACK,MAAZ,CACZ,KAAKC,cAAL,CAAoBV,OAAO,CAACO,QAAR,CAAiBD,CAAjB,CAApB,EAAwCL,GAAxC,CADY,CAAd;AAED;AACF,GALD,MAKO,IAAID,OAAO,CAACK,IAAR,IAAgB,SAApB,EAA+B;AACpCD,IAAAA,WAAW,GAAG,KAAKM,cAAL,CAAoBV,OAApB,EAA4BC,GAA5B,CAAd;AACD,GAFM,MAEA,IAAID,OAAO,CAACK,IAAR,IAAgB,oBAApB,EAA0C;AAC/C,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAEN,OAAO,CAACG,UAAR,CAAmBK,MAAnC,EAA2CF,CAAC,EAA5C,EAAgD;AAC9CF,MAAAA,WAAW,GAAGA,WAAW,CAACK,MAAZ,CACZ,KAAKE,eAAL,CAAqBX,OAAO,CAACG,UAAR,CAAmBG,CAAnB,CAArB,EAA2CL,GAA3C,CADY,CAAd;AAED;AACF,GALM,MAKA,IAAIzB,SAAS,CAACwB,OAAO,CAACK,IAAT,CAAb,EAA6B;AAClCD,IAAAA,WAAW,GAAG,KAAKO,eAAL,CAAqBX,OAArB,EAA6BC,GAA7B,CAAd;AACD,GAFM,MAEA;AACL;AACD;;AACD,MAAGA,GAAG,CAACW,QAAP,EAAiBX,GAAG,CAACW,QAAJ,CAAaC,IAAb,CAAkB,IAAlB,EAAuBT,WAAvB;AACjB,SAAOA,WAAP;AACD,CAxBD;;AAyBA3B,KAAK,CAACa,SAAN,CAAgBoB,cAAhB,GAAiC,UAASI,OAAT,EAAiBpC,OAAjB,EAA0B;AACzD,MAAG,CAACoC,OAAD,IAAY,CAACA,OAAO,CAACC,QAAxB,EAAkC;AAClC,MAAId,GAAG,GAAG3B,MAAM,CAAC,KAAKI,OAAN,EAAeA,OAAO,IAAI,EAA1B,CAAhB;;AACA,MAAIuB,GAAG,CAACe,UAAJ,IAAkBf,GAAG,CAACe,UAAJ,YAA0BC,KAAhD,EAAuD;AACrD,QAAIC,GAAG,GAAGjB,GAAG,CAACe,UAAd;AACAf,IAAAA,GAAG,CAACe,UAAJ,GAAiBE,GAAG,CAACC,MAAJ,CAAW,UAASC,GAAT,EAAcC,QAAd,EAAwB;AAClD,UAAI,OAAOA,QAAP,KAAqB,QAAzB,EAAmC;AACjC,YAAIC,GAAJ;AAAA,YAASC,GAAG,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,EAAoBC,GAApB,EAAf;;AACA,YAAI;AACFH,UAAAA,GAAG,GAAGI,OAAO,CAACZ,OAAD,EAAUO,QAAV,CAAb;AACD,SAFD,CAEE,OAAMM,CAAN,EAAS;AACTL,UAAAA,GAAG,GAAG,KAAN;AACD;;AACD,YAAIA,GAAJ,EAASF,GAAG,CAACG,GAAD,CAAH,GAAWD,GAAX;AACV,OARD,MAQO,IAAI,OAAOD,QAAP,KAAqB,QAArB,IAAiCA,QAAQ,CAAChB,IAA1C,IACNgB,QAAQ,CAACA,QADP,EAEP;AACE,YAAIA,QAAQ,CAAChB,IAAT,KAAkB,SAAtB,EAAiC;AAC/B,cAAIiB,GAAJ;AAAA,cAASC,GAAG,GAAGF,QAAQ,CAACE,GAAT,GAAeF,QAAQ,CAACE,GAAxB,GACXF,QAAQ,CAACA,QAAT,CAAkBG,KAAlB,CAAwB,GAAxB,EAA6BC,GAA7B,EADJ;;AAEA,cAAI;AACFH,YAAAA,GAAG,GAAGI,OAAO,CAACZ,OAAD,EAAUO,QAAQ,CAACA,QAAnB,CAAb;AACD,WAFD,CAEE,OAAMM,CAAN,EAAS;AACTL,YAAAA,GAAG,GAAG,KAAN;AACD;;AACD,cAAIA,GAAJ,EAASF,GAAG,CAACG,GAAD,CAAH,GAAWD,GAAX;AACV,SATD,MASO,IAAID,QAAQ,CAAChB,IAAT,KAAkB,QAAlB,IAA+BgB,QAAQ,CAACO,KAA5C,EAAmD;AACxDR,UAAAA,GAAG,CAACC,QAAQ,CAACA,QAAV,CAAH,GAAyBA,QAAQ,CAACO,KAAlC;AACD;AACF;;AACD,aAAOR,GAAP;AACD,KA1BgB,EA0Bd,EA1Bc,CAAjB;AA2BD,GA7BD,MA6BO;AACLnB,IAAAA,GAAG,CAACe,UAAJ,GAAiBf,GAAG,CAACe,UAAJ,IAAkB,EAAnC;AACD;;AACD,MAAIa,EAAE,GAAG5B,GAAG,CAACe,UAAJ,CAAea,EAAf,IAAqBf,OAAO,CAACe,EAA7B,KACNf,OAAO,CAACgB,UAAR,IAAsBhB,OAAO,CAACgB,UAAR,CAAmBD,EAAzC,GACCf,OAAO,CAACgB,UAAR,CAAmBD,EADpB,GACyB,IAFnB,CAAT;AAGA,MAAIA,EAAJ,EAAQ5B,GAAG,CAACe,UAAJ,CAAea,EAAf,GAAoBA,EAApB;AACR,SAAO,KAAKlB,eAAL,CAAqBG,OAAO,CAACC,QAA7B,EAAsCd,GAAtC,CAAP;AACD,CAxCD;;AAyCAxB,KAAK,CAACa,SAAN,CAAgBqB,eAAhB,GAAkC,UAASoB,IAAT,EAAcrD,OAAd,EAAuB;AACvD,MAAGF,SAAS,CAACuD,IAAI,CAAC1B,IAAN,CAAZ,EAAyB;AACvB,QAAIJ,GAAG,GAAG3B,MAAM,CAAC,KAAKI,OAAN,EAAeA,OAAO,IAAI,EAA1B,CAAhB;AACA,QAAIsD,MAAM,GAAG/B,GAAG,CAAC+B,MAAJ,IAAc,KAA3B;AACA,QAAIC,KAAK,GAAGzD,SAAS,CAACuD,IAAI,CAAC1B,IAAN,CAAT,CAAqBQ,IAArB,CAA0B,IAA1B,EAA+BkB,IAA/B,EACV,KAAK5C,GADK,EAEV;AAAC+C,MAAAA,CAAC,EAAC,KAAKpD,SAAL,CAAeC,IAAlB;AAAuBoD,MAAAA,CAAC,EAAC,KAAKrD,SAAL,CAAeI;AAAxC,KAFU,EAGVe,GAHU,CAAZ;AAKA,QAAImC,QAAJ,EAAaC,OAAb;;AACA,QAAIL,MAAM,CAACrC,WAAP,MAAwB,KAA5B,EAAmC;AACjCyC,MAAAA,QAAQ,GAAGH,KAAK,CAACK,GAAN,CAAU,UAASC,IAAT,EAAe;AAClC,eAAOC,aAAa,CAACD,IAAD,EAAMR,IAAI,CAAC1B,IAAX,EAAgBJ,GAAG,CAACe,UAApB,EAA+Bf,GAA/B,CAApB;AACD,OAFU,CAAX;AAGAoC,MAAAA,OAAO,GAAGD,QAAQ,CAACE,GAAT,CAAa,UAASG,IAAT,EAAe;AACpC,eAAOC,gBAAgB,CAACD,IAAD,EAAMV,IAAI,CAAC1B,IAAX,EAAgBJ,GAAhB,CAAvB;AACD,OAFS,CAAV;AAGA,aAAOoC,OAAP;AACD,KARD,MAQO;AACL,aAAOJ,KAAP;AACD;AACF,GApBD,MAoBO;AACL;AACD;AACF,CAxBD;;AA0BA,SAASO,aAAT,CAAuBD,IAAvB,EAA4BlC,IAA5B,EAAiCW,UAAjC,EAA4Cf,GAA5C,EAAiD;AAC/C,MAAI0C,GAAG,GAAG,EAAV;AACA,MAAIC,aAAa,GAAG3C,GAAG,IAAIA,GAAG,CAAC4C,cAAJ,CAAmB,eAAnB,CAAP,GAChB5C,GAAG,CAAC2C,aADY,GACI,KADxB;;AAEA,MAAG,CAACvC,IAAI,IAAI,OAAR,IAAmBA,IAAI,IAAI,YAA5B,KAA6CuC,aAAhD,EAA+D;AAC7DD,IAAAA,GAAG,CAAC,IAAD,CAAH,GAAYJ,IAAI,CAACf,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAZ;AACAmB,IAAAA,GAAG,CAAC,IAAD,CAAH,GAAYJ,IAAI,CAACf,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAZ;AACAmB,IAAAA,GAAG,CAAC,GAAD,CAAH,GAAW1C,GAAG,IAAIA,GAAG,CAAC6C,CAAX,GAAe7C,GAAG,CAAC6C,CAAnB,GAAuB,GAAlC;AACD,GAJD,MAIO;AACLH,IAAAA,GAAG,GAAG;AAACI,MAAAA,CAAC,EAAER;AAAJ,KAAN;;AACA,QAAGlC,IAAI,IAAI,SAAR,IAAqBA,IAAI,IAAI,cAAhC,EAAgD;AAC9CsC,MAAAA,GAAG,CAAC,WAAD,CAAH,IAAoB,SAApB;AACD;AACF;;AACD,OAAK,IAAIpB,GAAT,IAAgBP,UAAhB,EAA4B;AAC1B2B,IAAAA,GAAG,CAACpB,GAAD,CAAH,GAAUP,UAAU,CAACO,GAAD,CAApB;AACD;;AACD,SAAOoB,GAAP;AACD;;AAAA;;AAED,SAASD,gBAAT,CAA0BD,IAA1B,EAA+BpC,IAA/B,EAAoCJ,GAApC,EAAyC;AACvC,MAAI2C,aAAa,GAAG3C,GAAG,IAAIA,GAAG,CAAC4C,cAAJ,CAAmB,eAAnB,CAAP,GAChB5C,GAAG,CAAC2C,aADY,GACI,KADxB;AAEA,MAAII,GAAG,GAAE,OAAT;;AACA,MAAG,CAAC3C,IAAI,IAAI,OAAR,IAAmBA,IAAI,IAAI,YAA5B,KAA6CuC,aAAhD,EAA+D;AAC7DI,IAAAA,GAAG,GAAG,SAAN;AACD;;AACD,OAAI,IAAIzB,GAAR,IAAekB,IAAf,EAAqB;AACnBO,IAAAA,GAAG,IAAI,MAAMzB,GAAN,GAAW,IAAX,GAAkBkB,IAAI,CAAClB,GAAD,CAAtB,GAA8B,GAArC;AACD;;AACDyB,EAAAA,GAAG,IAAI,IAAP;AACA,SAAOA,GAAP;AACD;;AAED,SAAStB,OAAT,CAAiBuB,GAAjB,EAAqBV,IAArB,EAA2B;AACzB;AACA,WAASW,KAAT,CAAeC,IAAf,EAAoBC,GAApB,EAAyB9C,CAAzB,EAA4BY,GAA5B,EAAiC;AAC/B,QAAIiC,IAAI,CAACN,cAAL,CAAoBO,GAApB,CAAJ,EAA8B;AAC5B,aAAOD,IAAI,CAACC,GAAD,CAAX;AACD,KAFD,MAEO;AACL,YAAM,IAAIxD,KAAJ,CAAUsB,GAAG,CAACmC,KAAJ,CAAU,CAAV,EAAY/C,CAAC,GAAC,CAAd,EAAiBgD,IAAjB,CAAsB,GAAtB,IAA6B,+BAAvC,CAAN;AACD;AACF;;AACD,SAAOf,IAAI,CAACf,KAAL,CAAW,GAAX,EAAgBL,MAAhB,CAAuB+B,KAAvB,EAA8BD,GAA9B,CAAP;AACD;;AACDM,MAAM,CAACC,OAAP,GAAiB/E,KAAjB","sourcesContent":["var extend = require('./extend.js');\nvar converter = require('./converter.js');\n\n//g2svg as geojson2svg (shorthand)\nvar g2svg = function(options) {\n  this.options = options || {};\n  this.viewportSize = this.options.viewportSize || \n    {width: 256, height: 256};\n  this.mapExtent = this.options.mapExtent ||\n    {\n      left: -20037508.342789244,\n      right: 20037508.342789244,\n      bottom: -20037508.342789244,\n      top: 20037508.342789244\n    };\n  this.res = this.calResolution(this.mapExtent,this.viewportSize,\n    this.options.fitTo);\n};\ng2svg.prototype.calResolution = function(extent,size,fitTo) {\n  var xres = (extent.right - extent.left)/size.width;\n  var yres = (extent.top - extent.bottom)/size.height;\n  if (fitTo) { \n    if (fitTo.toLowerCase() === 'width') {\n      return xres;\n    } else if (fitTo.toLowerCase() === 'height') {\n      return yres;\n    } else {\n      throw new Error('\"fitTo\" option should be \"width\" or \"height\" ');\n    }\n  } else {\n    return Math.max(xres,yres);\n  }\n};\ng2svg.prototype.convert = function(geojson,options)  {\n  var opt = extend(this.options, options || {});\n  var multiGeometries = ['MultiPoint','MultiLineString','MultiPolygon'];\n  var geometries = ['Point', 'LineString', 'Polygon'];\n  var svgElements = [];\n  if (geojson.type == 'FeatureCollection') {\n    for(var i=0; i< geojson.features.length; i++) {\n      svgElements = svgElements.concat(\n        this.convertFeature(geojson.features[i],opt));\n    }\n  } else if (geojson.type == 'Feature') {\n    svgElements = this.convertFeature(geojson,opt);\n  } else if (geojson.type == 'GeometryCollection') {\n    for(var i=0; i< geojson.geometries.length; i++) {\n      svgElements = svgElements.concat(\n        this.convertGeometry(geojson.geometries[i],opt));\n    }\n  } else if (converter[geojson.type]) {\n    svgElements = this.convertGeometry(geojson,opt);\n  } else {\n    return;\n  }\n  if(opt.callback) opt.callback.call(this,svgElements);\n  return svgElements;\n};\ng2svg.prototype.convertFeature = function(feature,options) {\n  if(!feature && !feature.geometry) return;\n  var opt = extend(this.options, options || {});\n  if (opt.attributes && opt.attributes instanceof Array) {\n    var arr = opt.attributes\n    opt.attributes = arr.reduce(function(sum, property) {\n      if (typeof(property) === 'string') {\n        var val, key = property.split('.').pop()\n        try {\n          val = valueAt(feature, property)\n        } catch(e) {\n          val = false\n        }\n        if (val) sum[key] = val\n      } else if (typeof(property) === 'object' && property.type\n        && property.property)\n      {\n        if (property.type === 'dynamic') {\n          var val, key = property.key ? property.key \n            : property.property.split('.').pop()\n          try {\n            val = valueAt(feature, property.property)\n          } catch(e) {\n            val = false\n          }\n          if (val) sum[key] = val\n        } else if (property.type === 'static'  && property.value) {\n          sum[property.property] = property.value\n        }\n      }\n      return sum\n    }, {})\n  } else {\n    opt.attributes = opt.attributes || {};\n  }\n  var id = opt.attributes.id || feature.id || \n    (feature.properties && feature.properties.id \n    ? feature.properties.id : null);\n  if (id) opt.attributes.id = id \n  return this.convertGeometry(feature.geometry,opt);\n};\ng2svg.prototype.convertGeometry = function(geom,options) {\n  if(converter[geom.type]) {\n    var opt = extend(this.options, options || {});\n    var output = opt.output || 'svg';\n    var paths = converter[geom.type].call(this,geom,\n      this.res,\n      {x:this.mapExtent.left,y:this.mapExtent.top},\n      opt\n    );\n    var svgJsons,svgEles;\n    if (output.toLowerCase() == 'svg') {\n      svgJsons = paths.map(function(path) {\n        return pathToSvgJson(path,geom.type,opt.attributes,opt);\n      });\n      svgEles = svgJsons.map(function(json) {\n        return jsonToSvgElement(json,geom.type,opt);\n      });\n      return svgEles;\n    } else {\n      return paths;\n    }\n  } else {\n    return;\n  }\n};\n\nfunction pathToSvgJson(path,type,attributes,opt) {\n  var svg = {};\n  var pointAsCircle = opt && opt.hasOwnProperty('pointAsCircle') \n    ? opt.pointAsCircle : false;\n  if((type == 'Point' || type == 'MultiPoint') && pointAsCircle) {\n    svg['cx'] = path.split(',')[0];\n    svg['cy'] = path.split(',')[1];\n    svg['r'] = opt && opt.r ? opt.r : '1';\n  } else {\n    svg = {d: path};\n    if(type == 'Polygon' || type == 'MultiPolygon') {\n      svg['fill-rule'] == 'evenodd'; \n    } \n  }\n  for (var key in attributes) {\n    svg[key]= attributes[key];\n  }\n  return svg;\n};\n\nfunction jsonToSvgElement(json,type,opt) {\n  var pointAsCircle = opt && opt.hasOwnProperty('pointAsCircle') \n    ? opt.pointAsCircle : false;\n  var ele ='<path';\n  if((type == 'Point' || type == 'MultiPoint') && pointAsCircle) {\n    ele = '<circle';\n  }\n  for(var key in json) {\n    ele += ' ' + key +'=\"' + json[key] + '\"';\n  }\n  ele += '/>';\n  return ele;\n}\n\nfunction valueAt(obj,path) {\n  //taken from http://stackoverflow.com/a/6394168/713573\n  function index(prev,cur, i, arr) { \n    if (prev.hasOwnProperty(cur)) {\n      return prev[cur]; \n    } else {\n      throw new Error(arr.slice(0,i+1).join('.') + ' is not a valid property path'); \n    }\n  }\n  return path.split('.').reduce(index, obj);\n}\nmodule.exports = g2svg;\n"]},"metadata":{},"sourceType":"script"}
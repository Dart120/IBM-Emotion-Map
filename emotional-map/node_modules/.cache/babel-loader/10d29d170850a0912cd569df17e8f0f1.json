{"ast":null,"code":"//converter.js\nvar multi = require('multigeojson');\n\nfunction getCoordString(coords, res, origin) {\n  //origin - svg image origin \n  var coordStr = coords.map(function (coord) {\n    return (coord[0] - origin.x) / res + ',' + (origin.y - coord[1]) / res;\n  });\n  return coordStr.join(' ');\n}\n\nfunction addAttributes(ele, attributes) {\n  var part = ele.split('/>')[0];\n\n  for (var key in attributes) {\n    if (attributes[key]) {\n      part += ' ' + key + '=\"' + attributes[key] + '\"';\n    }\n  }\n\n  return part + ' />';\n}\n\nfunction point(geom, res, origin, opt) {\n  var r = opt && opt.r ? opt.r : 1;\n  var pointAsCircle = opt && opt.hasOwnProperty('pointAsCircle') ? opt.pointAsCircle : false;\n  var coords = getCoordString([geom.coordinates], res, origin);\n\n  if (pointAsCircle) {\n    return [coords];\n  } else {\n    return ['M' + coords + ' m' + -r + ',0' + ' a' + r + ',' + r + ' 0 1,1 ' + 2 * r + ',' + 0 + ' a' + r + ',' + r + ' 0 1,1 ' + -2 * r + ',' + 0];\n  }\n}\n\nfunction multiPoint(geom, res, origin, opt) {\n  var explode = opt && opt.hasOwnProperty('explode') ? opt.explode : false;\n  var paths = multi.explode(geom).map(function (single) {\n    return point(single, res, origin, opt)[0];\n  });\n  if (!explode) return [paths.join(' ')];\n  return paths;\n}\n\nfunction lineString(geom, res, origin, otp) {\n  var coords = getCoordString(geom.coordinates, res, origin);\n  var path = 'M' + coords;\n  return [path];\n}\n\nfunction multiLineString(geom, res, origin, opt) {\n  var explode = opt && opt.hasOwnProperty('explode') ? opt.explode : false;\n  var paths = multi.explode(geom).map(function (single) {\n    return lineString(single, res, origin, opt)[0];\n  });\n  if (!explode) return [paths.join(' ')];\n  return paths;\n}\n\nfunction polygon(geom, res, origin, opt) {\n  var mainStr, holes, holeStr;\n  mainStr = getCoordString(geom.coordinates[0], res, origin);\n\n  if (geom.coordinates.length > 1) {\n    holes = geom.coordinates.slice(1, geom.coordinates.length);\n  }\n\n  var path = 'M' + mainStr;\n\n  if (holes) {\n    for (var i = 0; i < holes.length; i++) {\n      path += ' M' + getCoordString(holes[i], res, origin);\n    }\n  }\n\n  path += 'Z';\n  return [path];\n}\n\nfunction multiPolygon(geom, res, origin, opt) {\n  var explode = opt.hasOwnProperty('explode') ? opt.explode : false;\n  var paths = multi.explode(geom).map(function (single) {\n    return polygon(single, res, origin, opt)[0];\n  });\n  if (!explode) return [paths.join(' ').replace(/Z/g, '') + 'Z'];\n  return paths;\n}\n\nmodule.exports = {\n  Point: point,\n  MultiPoint: multiPoint,\n  LineString: lineString,\n  MultiLineString: multiLineString,\n  Polygon: polygon,\n  MultiPolygon: multiPolygon\n};","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/node_modules/geojson2svg/src/converter.js"],"names":["multi","require","getCoordString","coords","res","origin","coordStr","map","coord","x","y","join","addAttributes","ele","attributes","part","split","key","point","geom","opt","r","pointAsCircle","hasOwnProperty","coordinates","multiPoint","explode","paths","single","lineString","otp","path","multiLineString","polygon","mainStr","holes","holeStr","length","slice","i","multiPolygon","replace","module","exports","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon"],"mappings":"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","sourcesContent":["//converter.js\nvar multi = require('multigeojson');\nfunction getCoordString(coords,res,origin) {\n  //origin - svg image origin \n  var coordStr = coords.map(function(coord) {\n    return (coord[0] - origin.x)/res + ',' + (origin.y - coord[1])/res;\n  });\n  return coordStr.join(' ');\n}\nfunction addAttributes(ele,attributes) {\n  var part = ele.split('/>')[0];\n  for(var key in attributes) {\n    if(attributes[key]) {\n      part += ' ' + key + '=\"' + attributes[key] + '\"';\n    }\n  }\n  return part + ' />';\n}\n\nfunction point(geom,res,origin,opt) {\n  var r = opt && opt.r ? opt.r : 1;\n  var pointAsCircle = opt && opt.hasOwnProperty('pointAsCircle') \n    ? opt.pointAsCircle : false;\n  var coords = getCoordString([geom.coordinates],res,origin);\n  if (pointAsCircle) {\n    return [coords];\n  } else {\n    return [\n      'M' + coords \n      + ' m'+ -r+ ',0'+ ' a'+r+','+ r + ' 0 1,1 '+ 2*r + ','+0\n      + ' a'+r+','+ r + ' 0 1,1 '+ -2*r + ','+0\n    ];\n  }\n}\nfunction multiPoint(geom,res,origin,opt) {\n  var explode = opt && opt.hasOwnProperty('explode') ? opt.explode : false;\n  var paths = multi.explode(geom).map(function(single) {\n    return point(single,res,origin,opt)[0];\n  });\n  if(!explode) return [paths.join(' ')];\n  return paths;\n\n}\nfunction lineString(geom,res,origin,otp) {\n  var coords = getCoordString(geom.coordinates,res,origin);\n  var path = 'M'+ coords;  \n  return [path];\n}\nfunction multiLineString(geom,res,origin,opt) {\n  var explode = opt && opt.hasOwnProperty('explode') ? opt.explode : false;\n  var paths = multi.explode(geom).map(function(single) {\n    return lineString(single,res,origin,opt)[0];\n  });\n  if(!explode) return [paths.join(' ')];\n  return paths;\n}\nfunction polygon(geom,res,origin,opt) {\n  var mainStr,holes,holeStr;\n  mainStr = getCoordString(geom.coordinates[0],res,origin);\n  if (geom.coordinates.length > 1) {\n    holes = geom.coordinates.slice(1,geom.coordinates.length);\n  }\n  var path = 'M'+ mainStr;\n  if(holes) {\n    for(var i=0;i<holes.length; i++) {\n      path += ' M' +  getCoordString(holes[i],res,origin);\n    }\n  }\n  path += 'Z';\n  return [path];\n}\nfunction multiPolygon(geom,res,origin,opt) {\n  var explode = opt.hasOwnProperty('explode') ? opt.explode : false;\n  var paths = multi.explode(geom).map(function(single) {\n    return polygon(single,res,origin,opt)[0];\n  });\n  if(!explode) return [paths.join(' ').replace(/Z/g,'') + 'Z'];\n  return paths;\n}\nmodule.exports = {\n  Point: point,\n  MultiPoint: multiPoint,\n  LineString: lineString,\n  MultiLineString: multiLineString,\n  Polygon: polygon,\n  MultiPolygon: multiPolygon\n};\n"]},"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/MapChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantile } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\nimport t from \"./topojson.json\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst MapChart = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n  const colorScale = scaleQuantile().domain(data.map(d => d.unemployment_rate)).range([\"#ffedea\", \"#ffcec5\", \"#ffad9f\", \"#ff8a75\", \"#ff5533\", \"#e2492d\", \"#be3d26\", \"#9a311f\", \"#782618\"]);\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoAlbersUsa\",\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: json,\n      children: ({\n        geographies\n      }) => geographies.map(geo => {\n        const cur = data.find(s => s.id === geo.id);\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: cur ? colorScale(cur.unemployment_rate) : \"#EEE\"\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MapChart, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/MapChart.js"],"names":["React","useState","useEffect","ComposableMap","Geographies","Geography","scaleQuantile","csv","t","geoUrl","MapChart","data","setData","then","counties","colorScale","domain","map","d","unemployment_rate","range","json","geographies","geo","cur","find","s","id","rsmKey"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAASC,GAAT,QAAoB,UAApB;AACA,OAAOC,CAAP,MAAc,iBAAd;AAEA,MAAMC,MAAM,GAAG,2DAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAK,IAAAA,GAAG,CAAC,kCAAD,CAAH,CAAwCM,IAAxC,CAA6CC,QAAQ,IAAI;AACvDF,MAAAA,OAAO,CAACE,QAAD,CAAP;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOA,QAAMC,UAAU,GAAGT,aAAa,GAC7BU,MADgB,CACTL,IAAI,CAACM,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,iBAAhB,CADS,EAEhBC,KAFgB,CAEV,CACL,SADK,EAEL,SAFK,EAGL,SAHK,EAIL,SAJK,EAKL,SALK,EAML,SANK,EAOL,SAPK,EAQL,SARK,EASL,SATK,CAFU,CAAnB;AAcA,sBACE,QAAC,aAAD;AAAe,IAAA,UAAU,EAAC,cAA1B;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEC,IAAxB;AAAA,gBACG,CAAC;AAAEC,QAAAA;AAAF,OAAD,KACCA,WAAW,CAACL,GAAZ,CAAgBM,GAAG,IAAI;AACrB,cAAMC,GAAG,GAAGb,IAAI,CAACc,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASJ,GAAG,CAACI,EAA5B,CAAZ;AACA,4BACE,QAAC,SAAD;AAEE,UAAA,SAAS,EAAEJ,GAFb;AAGE,UAAA,IAAI,EAAEC,GAAG,GAAGT,UAAU,CAACS,GAAG,CAACL,iBAAL,CAAb,GAAuC;AAHlD,WACOI,GAAG,CAACK,MADX;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA1CD;;GAAMlB,Q;;KAAAA,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\nimport { scaleQuantile } from \"d3-scale\";\nimport { csv } from \"d3-fetch\";\nimport t from \"./topojson.json\";\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/counties-10m.json\";\n\nconst MapChart = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    // https://www.bls.gov/lau/\n    csv(\"/unemployment-by-county-2017.csv\").then(counties => {\n      setData(counties);\n    });\n  }, []);\n\n  const colorScale = scaleQuantile()\n    .domain(data.map(d => d.unemployment_rate))\n    .range([\n      \"#ffedea\",\n      \"#ffcec5\",\n      \"#ffad9f\",\n      \"#ff8a75\",\n      \"#ff5533\",\n      \"#e2492d\",\n      \"#be3d26\",\n      \"#9a311f\",\n      \"#782618\"\n    ]);\n\n  return (\n    <ComposableMap projection=\"geoAlbersUsa\">\n      <Geographies geography={json}>\n        {({ geographies }) =>\n          geographies.map(geo => {\n            const cur = data.find(s => s.id === geo.id);\n            return (\n              <Geography\n                key={geo.rsmKey}\n                geography={geo}\n                fill={cur ? colorScale(cur.unemployment_rate) : \"#EEE\"}\n              />\n            );\n          })\n        }\n      </Geographies>\n    </ComposableMap>\n  );\n};\n\nexport default MapChart;"]},"metadata":{},"sourceType":"module"}
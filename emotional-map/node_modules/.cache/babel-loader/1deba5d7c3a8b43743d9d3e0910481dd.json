{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js\";\nimport React from \"react\";\nimport json from \"../amp.json\";\nimport \"../index.css\";\nimport * as d3 from \"d3\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n\nfunction Map(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    children: /*#__PURE__*/_jsxDEV(ComposableMap, {\n      width: 1000,\n      height: 1000,\n      projectionConfig: {\n        scale: 200,\n        center: [500, 500]\n      },\n      children: /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: json,\n        children: ({\n          geographies\n        }) => geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n          style: {\n            color: \"red\"\n          },\n          geography: geo\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js"],"names":["React","json","d3","ComposableMap","Geographies","Geography","Map","props","scale","center","geographies","map","geo","color","rsmKey"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAO,cAAP;AAEA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAGA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAElB,sBAEE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI,QAAC,aAAD;AAAgB,MAAA,KAAK,EAAG,IAAxB;AAA8B,MAAA,MAAM,EAAI,IAAxC;AAA8C,MAAA,gBAAgB,EAAE;AAACC,QAAAA,KAAK,EAAE,GAAR;AAAaC,QAAAA,MAAM,EAAC,CAAC,GAAD,EAAK,GAAL;AAApB,OAAhE;AAAA,6BACA,QAAC,WAAD;AAAa,QAAA,SAAS,EAAER,IAAxB;AAAA,kBACC,CAAC;AAAES,UAAAA;AAAF,SAAD,KACCA,WAAW,CAACC,GAAZ,CAAgBC,GAAG,iBAAI,QAAC,SAAD;AAAW,UAAA,KAAK,EAAI;AAACC,YAAAA,KAAK,EAAC;AAAP,WAApB;AAAsD,UAAA,SAAS,EAAED;AAAjE,WAA0CA,GAAG,CAACE,MAA9C;AAAA;AAAA;AAAA;AAAA,gBAAvB;AAFF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFF;AAaD;;KAfQR,G;AAiBT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport json from \"../amp.json\";\nimport \"../index.css\";\n\nimport * as d3 from \"d3\";\n\n\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n\n\nfunction Map(props) {\n \n  return (\n      \n    <div className=\"map-container\">\n        <ComposableMap  width= {1000} height = {1000} projectionConfig={{scale: 200, center:[500,500]}}>\n        <Geographies geography={json}>\n        {({ geographies }) =>\n          geographies.map(geo => <Geography style = {{color:\"red\"}}   key={geo.rsmKey} geography={geo} />)\n        }\n      </Geographies>\n    </ComposableMap>\n    </div>\n        \n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Marks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { geoMercator, geoPath } from 'd3';\nconst projection = geoMercator().scale(700).translate([480, 1000]);\nconst path = geoPath(projection);\n\nfunction Marks({\n  data\n}, props) {\n  _s();\n\n  const [fill, setFill] = useState('black');\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    className: \"marks\",\n    children: data.features.map(feature => /*#__PURE__*/_jsxDEV(\"path\", {\n      onClick: () => console.log(feature.properties.Nam),\n      fill: \"none\",\n      stroke: \"black\",\n      d: path(feature)\n    }, feature.properties.ENGTYPE_2, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Marks, \"QQ7gfKnzRFaS+SbwGU8EKlz4CVM=\");\n\n_c = Marks;\nexport default Marks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Marks\");","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Marks.js"],"names":["React","useState","useEffect","geoMercator","geoPath","projection","scale","translate","path","Marks","data","props","fill","setFill","console","log","features","map","feature","properties","Nam","ENGTYPE_2"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,WAAT,EAAqBC,OAArB,QAAoC,IAApC;AACA,MAAMC,UAAU,GAAGF,WAAW,GAAGG,KAAd,CAAoB,GAApB,EAAyBC,SAAzB,CAAmC,CAAC,GAAD,EAAK,IAAL,CAAnC,CAAnB;AACA,MAAMC,IAAI,GAAGJ,OAAO,CAACC,UAAD,CAApB;;AAEA,SAASI,KAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAAuBC,KAAvB,EAA6B;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,OAAD,CAA/B;AACAa,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACJ,sBAEI;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA,cAGIA,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,iBACxB;AAAM,MAAA,OAAO,EAAI,MAAMJ,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACC,UAAR,CAAmBC,GAA/B,CAAvB;AAA4D,MAAA,IAAI,EAAC,MAAjE;AAAwE,MAAA,MAAM,EAAC,OAA/E;AAAuF,MAAA,CAAC,EAAEZ,IAAI,CAACU,OAAD;AAA9F,OAA+GA,OAAO,CAACC,UAAR,CAAmBE,SAAlI;AAAA;AAAA;AAAA;AAAA,YADD;AAHJ;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWC;;GAdQZ,K;;KAAAA,K;AAeT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect }from \"react\";\nimport { geoMercator,geoPath } from 'd3';\nconst projection = geoMercator().scale(700).translate([480,1000])\nconst path = geoPath(projection)\n\nfunction Marks ({data},props){\n    const [fill,setFill] = useState('black')\n    console.log(data)\nreturn (\n    \n    <g className=\"marks\">\n      {\n          \n        data.features.map(feature => (\n         <path onClick = {() => console.log(feature.properties.Nam)} fill='none' stroke='black' d={path(feature)} key= {feature.properties.ENGTYPE_2} />\n        ))\n      }\n    </g>\n  );\n} \nexport default Marks\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js\";\nimport React from \"react\";\nimport \"../index.css\";\nimport * as d3 from \"d3\";\nimport * as topojson from \"topojson-client\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n\nfunction Map(props) {\n  d3.select('.map_container').append('svg').attr(\"width\", 1000).attr('height', 1000);\n  d3.json('/mapfinal.json').then(data => {\n    topojson.feature(data, data.objects.countries);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/temi/Documents/Projects/IBM-Emotion-Map/emotional-map/src/Components/Map.js"],"names":["React","d3","topojson","ComposableMap","Geographies","Geography","Map","props","select","append","attr","json","then","data","feature","objects","countries"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AAEA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,SAASC,aAAT,EAAwBC,WAAxB,EAAqCC,SAArC,QAAsD,mBAAtD;;AAGA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClBN,EAAAA,EAAE,CAACO,MAAH,CAAU,gBAAV,EAA4BC,MAA5B,CAAmC,KAAnC,EAA0CC,IAA1C,CAA+C,OAA/C,EAAuD,IAAvD,EAA6DA,IAA7D,CAAkE,QAAlE,EAA2E,IAA3E;AACAT,EAAAA,EAAE,CAACU,IAAH,CAAQ,gBAAR,EACCC,IADD,CACMC,IAAI,IAAI;AACZX,IAAAA,QAAQ,CAACY,OAAT,CAAiBD,IAAjB,EAAsBA,IAAI,CAACE,OAAL,CAAaC,SAAnC;AACD,GAHD;AAIA,sBAEE;AAAK,IAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD;;KAbQV,G;AAeT,eAAeA,GAAf","sourcesContent":["import React from \"react\";\n\nimport \"../index.css\";\n\nimport * as d3 from \"d3\";\n\nimport * as topojson from \"topojson-client\";\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\n\n\nfunction Map(props) {\n  d3.select('.map_container').append('svg').attr(\"width\",1000).attr('height',1000)\n  d3.json('/mapfinal.json')\n  .then(data => {\n    topojson.feature(data,data.objects.countries)\n  })\n  return (\n      \n    <div className=\"map-container\">\n        \n    </div>\n        \n  );\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["Components/Navbar.js","images/1F631.svg","images/1F60E.svg","images/1F624.svg","images/1F604.svg","images/1F622.svg","Components/RadialChart.js","Components/NumberedList.js","images/twitterLogo.png","Components/TwitterLogoList.js","Components/Dashboard.js","Components/RegionalDashboard.js","Components/Region.js","Components/ColourContext.js","Components/Map.js","Components/ColourPicker.js","Components/SettingsRow.js","Components/ColourChanger.js","Components/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","class","className","to","src","alt","RadialChart","check","arr","values","return_img","undefined","indexOf","Math","max","fear_emoji","confident_emoji","anger_emoji","joy_emoji","sadness_emoji","colourCode","state","series","options","chart","height","type","colors","Fear","Confident","Anger","Joy","Sadness","plotOptions","radialBar","dataLabels","name","show","value","hollow","margin","size","background","image","imageWidth","imageHeight","imageOffsetX","imageOffsetY","imageClipped","position","dropShadow","enabled","top","left","blur","opacity","track","startAngle","endAngle","strokeWidth","stroke","lineCap","labels","prevProps","prevState","this","setState","id","React","Component","NumberedList","number","message","TwitterLogoList","long","twitterLogo","Dashboard","data","valuesList","round","fear","confident","anger","joy","sadness","forEach","e","index","num","min","zipped","map","i","sort","a","b","delay","happiest1","happiest2","happiest3","happiest4","happiest5","trend1","trend2","trend3","trend4","trend5","toReturn","push","slice","toUpperCase","orderedEmotions","RegionalDashboard","fear_inner","createRef","confident_inner","anger_inner","joy_inner","sadness_inner","chng_inner_color","ref","colour","current","inner","querySelector","style","backgroundColor","analytical","tentative","sample_size","width","ProgressBar","animated","now","label","Region","useState","strokeColour","setStrokeColour","setStrokeWidth","setCurrentRegion","geo","properties","rsmKey","useEffect","clicked","onMouseEnter","setTooltipContent","onMouseLeave","onClick","setClicked","fill","geography","memo","ColourContext","createContext","ColourUpdateContext","useColour","useContext","ColourProvider","children","colours","setColours","Provider","emotion","newColours","Map","mapData","regionData","key","toLowerCase","calcColour","data-tip","projectionConfig","center","rotation","parallels","scale","datum","geographies","ColourPicker","displayColorPicker","setDisplayColorPicker","color","setColor","colourUpdater","styles","reactCSS","borderRadius","swatch","padding","boxShadow","display","cursor","popover","zIndex","cover","right","bottom","onChange","console","log","hex","SettingsRow","ColourChanger","Object","entries","textDecoration","Settings","App","findRegionData","json","regionName","forUK","regionalData","length","updateTooltip","content","closeModal","modalClosed","dashboardData","error","fetchData","fetch","result","ok","Error","status","anlysis","interval","setInterval","clearInterval","Consumer","Alert","variant","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69effa9f.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\nimport \"../index.css\";\n\n\nfunction Navbar(props) {\n  return (\n    <div class=\"navbar-container\">\n        <div className=\"dark-grey navbar\">\n        \n            <Link to='/'>\n            <h1 className = \"title main-title blue\">Emotional Map</h1>\n            </Link>\n            <Link to='/settings'>\n            <img className=\"white settings-icon\" src=\"/settings-24px.svg\" alt=\"Settings Icon\"></img>\n            </Link>\n          \n          \n        </div>\n    </div>\n  );\n}\n\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/1F631.3e4c1c87.svg\";","export default __webpack_public_path__ + \"static/media/1F60E.407f4a98.svg\";","export default __webpack_public_path__ + \"static/media/1F624.fcf986fa.svg\";","export default __webpack_public_path__ + \"static/media/1F604.fda86138.svg\";","export default __webpack_public_path__ + \"static/media/1F622.73a8d40a.svg\";","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\nimport fear_emoji from \"../images/1F631.svg\";\nimport confident_emoji from \"../images/1F60E.svg\";\nimport anger_emoji from \"../images/1F624.svg\";\nimport joy_emoji from \"../images/1F604.svg\";\nimport sadness_emoji from \"../images/1F622.svg\";\n\n\nexport default class RadialChart extends React.Component {\n    constructor(props) {\n      super(props);\n      \n      const {colourCode} = this.props\n\n      this.state = {\n        series: this.props.values,\n        options: {\n          chart: {\n            height: 10,\n            type: 'radialBar',\n          },\n          colors: [colourCode.Fear, colourCode.Confident, colourCode.Anger, colourCode.Joy, colourCode.Sadness],\n          plotOptions: {\n            radialBar: {\n              dataLabels: {\n                name: {\n                  show: false,\n                },\n                value: {\n                  show: false,\n                },\n              },\n\n            //   hole\n              hollow: {\n                margin: 5,\n                size: '35%',\n                background: 'transparent',\n                image: this.check(),\n                imageWidth: 80,\n                imageHeight: 80,\n                imageOffsetX: 0,\n                imageOffsetY: 0,\n                imageClipped: false,\n                position: 'front',\n                dropShadow: {\n                  enabled: false,\n                  top: 0,\n                  left: 0,\n                  blur: 3,\n                  opacity: 0.5\n                }\n            },\n              \n              track: {\n                show: true,\n                startAngle: undefined,\n                endAngle: undefined,\n                background: '#C4C4C4',\n                strokeWidth: 160,\n                opacity: 0.2,\n                margin: 5, \n                dropShadow: {\n                    enabled: true,\n                    top: 0,\n                    left: 0,\n                    blur: 3,\n                    opacity: 0.5\n                }\n            },\n            stroke: {\n                lineCap: 'round'\n              },\n            }\n          },\n          labels: ['Fear', 'Confident', 'anger', 'Joy', 'Sadness'],\n        },\n      };\n\n    }\n\n    componentDidUpdate(prevProps, prevState){\n      if (prevProps.values !== this.props.values) {\n        this.setState({\n          series: this.props.values,\n          options: {\n            ...prevState,\n            plotOptions : {\n              radialBar: {\n                hollow: {\n                  image: this.check()\n                }\n              }\n            }\n          }\n        })\n    }\n    }\n\n    check = () => {\n        const arr = this.props.values;\n        const indexOfMaxValue = arr.indexOf(Math.max(...arr));\n        var return_img = undefined;\n        // decide the return emoji using the index of the max percentage \n        switch(indexOfMaxValue){\n            case 0:\n                return_img = fear_emoji;\n                break;\n            case 1:\n                return_img = confident_emoji;\n                break;\n            case 2:\n                return_img = anger_emoji;\n                break;\n            case 3:\n                return_img = joy_emoji;\n                break;\n            default:\n                return_img = sadness_emoji;\n        }\n        return return_img;\n    }\n  \n    \n\n    render() {\n      return (\n        <div id=\"chart\">\n            <Chart colors={this.state.colors} options={this.state.options} series={this.state.series} type=\"radialBar\" height={280} />\n        </div>\n      )\n      }\n    };","import React from 'react';\nimport '../dashboard.css';\n\n\nexport default function NumberedList(props) {\n    return (\n            <div className=\"rectangle\">\n            <div className=\"circle\">\n              <div className=\"white_text\">\n                {props.number}\n              </div>\n            </div>\n            <div className=\"black_text\">{props.message}</div>\n          </div>\n    )\n}\n\n","export default __webpack_public_path__ + \"static/media/twitterLogo.789060fd.png\";","import React from 'react';\nimport '../dashboard.css';\nimport twitterLogo from '../images/twitterLogo.png';\n\nconst checkLong = (long) => {\n  if(long)\n    return \"long_rectangle\";\n  else\n    return \"rectangle\";\n  \n}\n\nexport default function TwitterLogoList(props) {\n    return (\n            <div className={checkLong(props.long)}>\n            <div className=\"white-circle\">\n              <div className=\"twitterLogo\">\n                  <img src={twitterLogo} alt=\"TwitterLogo\"/>\n              </div>\n            </div>\n            <div className=\"black_text\">{props.message}</div>\n          </div>\n    )\n}\n\n","import React from 'react';\nimport FadeIn from 'react-fade-in';\nimport '../dashboard.css';\nimport RadialChart from './RadialChart';\nimport NumberedList from './NumberedList';\nimport TwitterLogoList from '../Components/TwitterLogoList';\n\nexport default function Dashboard(props) {\n    const data = props.data;\n    \n    // function that clips the percentage values between 0 and 100\n    const clamp = (num) => Math.min(Math.max(num, 0), 100);\n\n    // round each percentage to nearest integer\n    const valuesList = [Math.round(data.fear), Math.round(data.confident),Math.round(data.anger),Math.round(data.joy),Math.round(data.sadness)]\n    valuesList.forEach((e, index) => valuesList[index] = clamp(e));\n    const emotionsList = [\"fear\", \"confident\", \"anger\", \"joy\", \"sadness\"]\n    \n    // [[\"fear\", 12],[\"confident\", 5],...]\n    const zipped = emotionsList.map(function(e, i) {\n      return [e, valuesList[i]];\n    });\n\n    // Sort the zipped array using the percentages (descending order)\n    zipped.sort(function(a, b) {\n      return b[1] - a[1];\n    });\n\n    // return the emotions ordered from highest to lowest percentage\n    const orderedEmotions = () => {\n      var toReturn = []\n      for(let i = 0; i < 5; i++){\n        toReturn.push(<NumberedList key={\"topHashtagsList\"+i} number={(i+1) +\".\"} message={zipped[i][0].slice(0,1).toUpperCase() + zipped[i][0].slice(1) + \" - \" + zipped[i][1] + \"%\"}/>)\n      }\n      return toReturn;\n    } \n    \n    \n    return (\n        <div className=\"outer_container\">\n          <div className=\"big_container\">\n            <div className=\"grid\">\n              \n              <div className=\"UK_statistics_title\">\n                UK Statistics\n              </div>\n              <div className=\"line1\"></div>\n\n              <div className=\"happiest_cities\">\n                <div className=\"section_title\">Happiest Cities:</div>\n                <FadeIn delay={200}>\n                {/* {happiestCitiesList} */}\n                  <NumberedList key={\"happiestCitiesList\"+1} number={\"1.\"} message={data.happiest1}/>\n                  <NumberedList key={\"happiestCitiesList\"+2} number={\"2.\"} message={data.happiest2}/>\n                  <NumberedList key={\"happiestCitiesList\"+3} number={\"3.\"} message={data.happiest3}/>\n                  <NumberedList key={\"happiestCitiesList\"+4} number={\"4.\"} message={data.happiest4}/>\n                  <NumberedList key={\"happiestCitiesList\"+5} number={\"5.\"} message={data.happiest5}/>\n                </FadeIn>\n              </div>\n              \n              <div className=\"top_hashtags\">\n                <div className=\"section_title\">Top Trends:</div>\n                <FadeIn delay={200}>\n                {/* {topHashtagsList} */}\n                  <TwitterLogoList key={\"topHashtagsList\"+1} message={data.trend1}/>\n                  <TwitterLogoList key={\"topHashtagsList\"+2} message={data.trend2}/>\n                  <TwitterLogoList key={\"topHashtagsList\"+3} message={data.trend3}/>\n                  <TwitterLogoList key={\"topHashtagsList\"+4} message={data.trend4}/>\n                  <TwitterLogoList key={\"topHashtagsList\"+5} message={data.trend5}/>\n                </FadeIn>\n              </div>\n              \n              <div className=\"top_emotions\">\n                <div className=\"section_title\">Top Emotions:</div>\n                <FadeIn delay={200}>\n                  {orderedEmotions()}\n                </FadeIn>\n              </div>\n              \n              <div className=\"dial_diagram\">\n                  <RadialChart values={valuesList} colourCode={props.colourCode}/>\n              </div>\n            </div>\n\n          </div>\n        </div>\n    )\n}\n","import React, { Component, createRef } from 'react'\nimport FadeIn from 'react-fade-in';\nimport TwitterLogoList from './TwitterLogoList';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport '../regionalDashboard.css';\nimport '../dashboard.css';\n\nimport fear_emoji from \"../images/1F631.svg\";\nimport confident_emoji from \"../images/1F60E.svg\";\nimport anger_emoji from \"../images/1F624.svg\";\nimport joy_emoji from \"../images/1F604.svg\";\nimport sadness_emoji from \"../images/1F622.svg\";\n\n\nexport default class RegionalDashboard extends Component {\n    constructor(props){\n        super(props);\n        this.fear_inner = createRef();\n        this.confident_inner = createRef();\n        this.anger_inner = createRef();\n        this.joy_inner = createRef();\n        this.sadness_inner = createRef();\n    }\n    componentDidMount(){\n        let {colourCode} = this.props;\n\n        // Changes the colour of the progress bar by accessing the\n        // child element\n        const chng_inner_color = (ref, colour) => {\n            if (ref.current) {\n                const inner = ref.current.querySelector(\".progress-bar\");\n                if ( inner ) {\n                   inner.style.backgroundColor = colour;\n                }\n            }\n        }\n\n        chng_inner_color(this.fear_inner, colourCode.Fear);\n        chng_inner_color(this.confident_inner, colourCode.Confident);\n        chng_inner_color(this.anger_inner, colourCode.Anger);\n        chng_inner_color(this.joy_inner, colourCode.Joy);\n        chng_inner_color(this.sadness_inner, colourCode.Sadness);\n    }\n\n    render() {\n        let {data} = this.props;\n        // prevent crashing if data hasn't been loaded in\n        if(!data){\n            data = {\n                name: 'Loading...',\n                joy: 0,\n                anger: 0,\n                fear: 0,\n                sadness: 0,\n                confident: 0,\n                analytical: 0,\n                tentative: 0,\n                trend1: 'Loading...',\n                trend2: 'Loading...',\n                trend3: 'Loading...',\n                sample_size: 'Loading...'\n              }\n        }\n        const check = () =>{\n            const arr = [];\n            arr[0] = data.fear;\n            arr[1] = data.confident;\n            arr[2] = data.anger;\n            arr[3] = data.joy;\n            arr[4] = data.sadness;\n\n            const indexOfMaxValue = arr.indexOf(Math.max(...arr));\n            var return_img = undefined;\n\n            switch(indexOfMaxValue){\n                case 0:\n                    return_img = fear_emoji;\n                    break;\n                case 1:\n                    return_img = confident_emoji;\n                    break;\n                case 2:\n                    return_img = anger_emoji;\n                    break;\n                case 3:\n                    return_img = joy_emoji;\n                    break;\n                default:\n                    return_img = sadness_emoji;\n            }\n            return return_img;\n        }\n\n        return (\n            <div className=\"float_right\">\n                <div className=\"regional_container\">\n                    <div>\n                        <div className=\"region-title\">\n                            {data.name}\n                        </div>\n                        <div className=\"emoji-div\">\n                            <img alt=\"regional dashboard emoji\" src={check()} width=\"56px\" height=\"56px\"/>\n                        </div>\n                        <div className=\"line\"></div>\n\n                        <div className=\"regional-top-hashtags\">\n                            <div className=\"section_title\">\n                                Top Trends\n                            </div>\n                            <FadeIn>\n                            <TwitterLogoList message={data.trend1} long={true}/>\n                            <TwitterLogoList message={data.trend2} long={true}/>\n                            <TwitterLogoList message={data.trend3} long={true}/>\n                            </FadeIn>\n                        </div>\n\n                        <div className=\"emotional-breakdown\">\n                            <div className=\"section_title\">\n                                Emotional Breakdown\n                            </div>\n                            <div className=\"progress_bar_container\">\n                                <ProgressBar ref={this.fear_inner} animated now={data.fear} label={Math.round(data.fear)+\"%\"} className=\"styled-progress-bar\" height=\"1px\" style={{ height: \"30.82px\", margin:\"10px 0px 10px 0px\", \"borderRadius\": \"19.5px\"}}/>\n                                <ProgressBar ref={this.confident_inner} animated now={data.confident} label={Math.round(data.confident)+\"%\"} className=\"styled-progress-bar\" height=\"1px\" style={{ height: \"30.82px\", margin:\"10px 0px 10px 0px\", \"borderRadius\": \"19.5px\"}}/>\n                                <ProgressBar ref={this.anger_inner} animated now={data.anger} label={Math.round(data.anger)+\"%\"} className=\"styled-progress-bar\" height=\"1px\" style={{ height: \"30.82px\", margin:\"10px 0px 10px 0px\", \"borderRadius\": \"19.5px\" }}/>\n                                <ProgressBar ref={this.joy_inner} animated now={data.joy} label={Math.round(data.joy)+\"%\"} className=\"styled-progress-bar\" height=\"1px\" style={{ height: \"30.82px\", margin:\"10px 0px 10px 0px\" , \"borderRadius\": \"19.5px\"}}/>\n                                <ProgressBar ref={this.sadness_inner} animated now={data.sadness} label={Math.round(data.sadness)+\"%\"} className=\"styled-progress-bar\" height=\"1px\" style={{ height: \"30.82px\", margin:\"10px 0px 10px 0px\", \"borderRadius\": \"19.5px\" }}/>\n                            </div>\n                        </div>\n                        <div className=\"sample-size\">\n                            Sample size: {data.sample_size}\n                        </div>\n                    </div>\n                    \n                </div>\n                \n            </div>\n        )\n    }\n}\n","import React, {useState,useEffect,memo} from \"react\";\nimport \"../index.css\";\nimport { Geography } from \"react-simple-maps\";\nfunction Region(props) {\n    const [strokeColour, setStrokeColour] = useState('black')\n    const [strokeWidth, setStrokeWidth] = useState('3px')\n    let {setCurrentRegion, colour,geo, geo : {properties : {name}, rsmKey}} = props\n    useEffect(() => {\n        if (props.clicked === rsmKey){\n            setStrokeWidth('6px')\n\n        }else{\n            setStrokeWidth('3px')\n        }\n    }, [props.clicked, rsmKey]);\n    function handleClick(){\n        props.setClicked(rsmKey)\n        setCurrentRegion(name)  \n    }\n    function handleHover(){\n        setStrokeColour('#00AEEF')\n        props.setTooltipContent(name)\n    }\n    function handleNoHover(){\n        setStrokeColour('black')\n        props.setTooltipContent('')\n    }\n   \n    return (\n        <>\n        \n            \n        <Geography  onMouseEnter={() => handleHover()} onMouseLeave = {() => handleNoHover()} onClick={() => handleClick()} fill={colour} strokeWidth={strokeWidth} stroke={strokeColour} key={rsmKey} geography={geo} />\n\n            \n      \n\n       \n        \n        </>\n    )\n    \n};\n  \nexport default memo(Region);\n  ","import React, {useState, useContext} from \"react\";\nimport \"../index.css\";\nexport const ColourContext = React.createContext()\nconst ColourUpdateContext = React.createContext()\n\n//Colour Hook to acees value\nexport function useColour(){\n    return useContext(ColourContext)\n}\n//Colour Hook to change value\nexport function useColourUpdate(){\n    return useContext(ColourUpdateContext)\n}\n//Provides colour down the node tree\nfunction ColourProvider({children}){\n    //Colour state\n    const [colours, setColours] = useState({\n        \"Fear\": \"#C81B25\",\n        \"Confident\": \"#3DC81B\",\n        \"Anger\": '#B033AB',\n        \"Joy\": \"#F39800\",\n        \"Sadness\": \"#00AEEF\",\n      })\n    //Fuction to change state\n    const changeColour = (emotion, colourCode) => {\n       let newColours = colours\n       newColours[emotion] = colourCode\n       setColours(newColours)\n    }\n    return(\n        <ColourContext.Provider value={colours}>\n            <ColourUpdateContext.Provider value={changeColour}>\n            {children}\n            </ColourUpdateContext.Provider>\n        </ColourContext.Provider>\n    )\n}\nexport default ColourProvider","import React, {useState, useEffect, memo} from \"react\";\nimport \"../index.css\";\nimport { ComposableMap, Geographies} from \"react-simple-maps\";\nimport datum from '../regions.json'\nimport Region from './Region'\nimport {useColour} from './ColourContext'\n\nfunction Map(props) {\n  const [colours,setColours] = useState({})\n  const [clicked,setClicked] = useState('')\n  const mapData = props.mapData\n  const colourCode = useColour()\n  useEffect(() => {\n    //figures out what region needs what colour\n    function calcColour(regionData) {\n      let max = 0\n      let colour = 'gray'\n      for (let key in colourCode){\n        if (regionData[key.toLowerCase()] > max){\n          colour = colourCode[key]\n          max = regionData[key.toLowerCase()]\n        }\n      }\n      return colour\n    }\n    mapData.forEach((regionData) => {\n      setColours(colours => ({\n     ...colours,\n       [regionData.name] : calcColour(regionData)}))\n    })\n    \n  },[mapData, colourCode])\n  return (\n    <ComposableMap data-tip=\"\" style={{width: \"100%\", height: \"90vh\"}}  projectionConfig = {{center:[-3, 55.4],rotation:[4.4,0,0],parallels:[50,60],scale: 6000}}>\n    <Geographies geography={datum}>\n      {\n       ({ geographies }) => \n        geographies\n        .map((geo,index) => {\n            return(\n              <>\n              <Region setTooltipContent={props.setTooltipContent}  setClicked = {setClicked} clicked = {clicked} setCurrentRegion = {props.setCurrentRegion} geo = {geo} colour = {colours[geo.properties.name]}></Region>\n              </>\n                )\n          }\n      )\n      }\n    </Geographies>\n  </ComposableMap>      \n  );\n}\n//avoid rerenders when props havent changed\nexport default memo(Map);\n","import React, {useState} from 'react'\nimport reactCSS from 'reactcss'\nimport { SketchPicker } from 'react-color'\nimport {useColourUpdate} from './ColourContext'\nfunction ColourPicker(props) {\n    const [displayColorPicker, setDisplayColorPicker] = useState(false);\n    const [color, setColor] = useState(props.color)\n    const colourUpdater = useColourUpdate()\n    const styles = reactCSS({\n        'default': {\n          color: {\n            width: '1em',\n            height: '1em',\n            borderRadius: '50px',\n            background: `${color}`,\n          },\n          swatch: {\n            padding: '5px',\n            margin: '0 auto',\n            background: '#fff',\n            borderRadius: '50px',\n            boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\n            display: 'inline-block',\n            cursor: 'pointer',\n          },\n          popover: {\n            position: 'absolute',\n            zIndex: '2',\n          },\n          cover: {\n            position: 'fixed',\n            top: '0px',\n            right: '0px',\n            bottom: '0px',\n            left: '0px',\n          },\n        },\n      });\n    \n    //on click display colour picker hide when done and update colour state when colour chosen\n    const handleClick = () => {\n        setDisplayColorPicker(!displayColorPicker)\n      };\n    const handleClose = () => {\n        setDisplayColorPicker(false)\n      };\n    const handleChange = (colour) => {\n        console.log(colour)\n        setColor(colour.hex)\n        colourUpdater(props.emotion, colour.hex)\n      };\n      return (\n        <div style={{margin:'0 auto'}}>\n          <div style={ styles.swatch } onClick={ () => handleClick() }>\n            <div style={ styles.color } />\n          </div>\n          { displayColorPicker ? <div style={ styles.popover }>\n            <div style={ styles.cover } onClick={ () => handleClose() }/>\n            <SketchPicker color={ color } onChange={ (color) => handleChange(color) } />\n          </div> : null }\n  \n        </div>\n      )\n}\n\n\nexport default ColourPicker","import React from \"react\";\nimport \"../settings.css\";\nimport ColourPicker from \"./ColourPicker\"\nfunction SettingsRow(props){\n    return(\n        <div className=\"settings-row\">\n            <div className=\"emotion-title\">\n            <h2>{props.emotion}</h2>\n            </div>\n            <div className=\"colour-picker\">\n            <ColourPicker emotion={props.emotion} color={props.colour}/>\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsRow","import React from \"react\";\nimport \"../settings.css\";\nimport {useColour} from './ColourContext'\nimport SettingsRow from \"./SettingsRow\"\nimport {Link} from 'react-router-dom'\nfunction ColourChanger(props){\n    // from colour context\n    let colours = useColour()\n\n    return(\n        <div className=\"settings-container\">\n            <h1 className=\"settings-title\">Settings</h1>\n            <div className=\"colour-changers\">\n            {\n                // map colours to rows\n            Object.entries(colours).map(([emotion,colour])=> <SettingsRow key={emotion} colour={colour} emotion = {emotion}/>)\n            }\n            <div className=\"done-container\">\n                <Link  to=\"/\">\n                <div className=\"done-button\"><h5 style={{textDecoration: 'none', color: 'white'}}>Done</h5></div>\n                </Link>\n            </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default ColourChanger","import React from \"react\";\nimport \"../index.css\";\nimport ColourChanger from \"./ColourChanger\"\n\nfunction Settings(){\n    return(\n        <div className=\"page\">\n            <ColourChanger/>\n        </div>\n    )\n}\n\nexport default Settings","import React from \"react\";\nimport Alert from 'react-bootstrap/Alert';\nimport Navbar from './Components/Navbar'\nimport Dashboard from './Components/Dashboard';\nimport RegionalDashboard from './Components/RegionalDashboard';\nimport Map from './Components/Map';\nimport ReactTooltip from \"react-tooltip\";\nimport Settings from './Components/Settings.js'\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport './main.css'; \nimport \"./styles.css\";\n\nimport {ColourContext} from './Components/ColourContext'\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      mapData: [],\n      content:'',\n      regionalData: {\n        name: 'Loading...',\n        joy: 0,\n        anger: 0,\n        fear: 0,\n        sadness: 0,\n        confident: 0,\n        analytical: 0,\n        tentative: 0,\n        trend1: 'Loading...',\n        trend2: 'Loading...',\n        trend3: 'Loading...',\n        sample_size: 'Loading...'\n      },\n\n      dashboardData: {\n        name: 'United Kingdom',\n        joy: 0,\n        anger: 0,\n        fear: 0,\n        sadness: 0,\n        confident: 0,\n        analytical: 0,\n        tentative: 0,\n        trend1: 'Loading...',\n        trend2: 'Loading...',\n        trend3: 'Loading...',\n        trend4: 'Loading...',\n        trend5: 'Loading...',\n        happiest1: \"Loading...\",\n        happiest2: \"Loading...\",\n        happiest3: \"Loading...\",\n        happiest4: \"Loading...\",\n        happiest5: \"Loading...\",\n        sample_size: \"Loading...\"\n      },\n      error: false, // notify server errors \n      modalClosed: false, // notify if intoduction modal is closed\n    }\n\n  }\n\n  componentDidMount() {\n    \n    let fetchData = async () => {\n      // fetch from \"http://127.0.0.1:8020/api/recent\" i.e. server\n      const URL = \"/api/recent\"\n      try {\n        let result = await fetch(URL);\n        if (!result.ok) {\n          throw new Error(`HTTP error - status: ${result.status}`);\n        }\n        else{\n          let json = await result.json();\n          this.setState({\n              mapData: json.anlysis,\n              dashboardData : this.findRegionData(json.anlysis, \"United Kingdom\", true),\n              error:false,\n            });\n        }\n      } catch(error){\n        console.log(\"Failed to fetch data from the server\");\n        // set error to true to display error alert\n        this.setState({error:true})\n      }\n    }\n\n    // Carry out an initial fetching of data before interval is set\n    fetchData();\n\n    // Fetch data from server every X milliseconds\n    this.interval = setInterval(() => {\n      console.log(\"Fetched new data\")\n      fetchData();\n    }, 10000);\n  }\n  \n  componentWillUnmount() {\n    // Clear the interval right before component unmount\n    clearInterval(this.interval);\n  }\n\n  // find JSON data relating to the specified region from the\n  // data received from the server.\n  // json - json array retrieved from json.anlysis from server\n  // regionName - name of the region to search in the json array\n  // forUK - boolean to alert if function is being used for the UK dashboard\n  findRegionData = (json, regionName, forUK=false) => {\n    // check if mapData has been assigned a value\n    // if not, then that means data hasn't been fetched,\n    // so return initial data template.\n    if ((this.state.mapData) || forUK) {\n      for(var i = 0; i < json.length; i++) {\n        if(json[i].name === regionName){\n          return json[i];\n        }\n        // If the city doesn't exist in the json data,\n        // return the previous regionalData\n        if(i===json.length-1){\n          return this.state.regionalData;\n        }\n      }\n    } else{\n        return this.state.regionalData;\n    }\n  }\n\n  // This method is passed into the map component as props\n  // so that the child map component can change parent\n  // app components state for the regional dashboard\n  setCurrentRegion = (regionName) => {\n    this.setState((prevState) => ({\n      regionalData : this.findRegionData(prevState.mapData, regionName),\n    }))\n  }\n\n  updateTooltip = (content) => {\n    this.setState({content});\n  }\n  closeModal = () => {\n    this.setState({modalClosed: true})\n  }\n\n  render(){\n\n \n\n    return (\n      \n      <ColourContext.Consumer>\n    {colours => (\n      <div className=\"App\">\n        {this.state.error && <Alert variant=\"danger\">Failed to fetch data from server</Alert>}\n        {!this.state.modalClosed &&\n        <div className=\"modal-container\">\n        <div className=\"intro-modal\">\n          <div className=\"modal-title\">IBM Emotional Map</div>\n          <div className=\"modal-text\">\n            <p>This product was made to show off the capabilities of the Watson Tone Analyser made by IBM.</p>\n            <p>Click on a region in the map to see its current sentimental breakdown.</p>\n          </div>\n          <div className=\"close-button\" onClick={() => this.closeModal()} onMouseEnter={this.style = {\"color\": \"blue\"}}>Close</div>\n        </div>\n        </div>\n      }\n        <div className=\"main-grid\">\n          \n        <Router>\n          \n          <div className=\"header\"><Navbar /></div>\n          \n        <Switch>\n        <Route exact path=\"/\">\n        <div className=\"helper\">\n            <h3 style={{margin: ' auto auto'}}>Click on the Map!</h3>\n          </div>\n          <div className=\"map-container\">\n            <Map setTooltipContent={this.updateTooltip} mapData = {this.state.mapData} setCurrentRegion={this.setCurrentRegion} />\n            <ReactTooltip>{this.state.content}</ReactTooltip>\n          </div>\n          \n          <div className=\"regional-dashboard-container\">\n          {this.state.modalClosed &&\n            <RegionalDashboard data={this.state.regionalData} colourCode={colours}/>\n          }\n          </div>\n          <div className=\"main-dashboard\">\n            <div className=\"colour-key\">\n              <div className=\"coloured-colour-key\" style={{\"color\": colours.Fear}}>\n                <div className=\"coloured-circle\" style={{\"background\": colours.Fear}}/>\n                Fear\n              </div>\n              <div className=\"coloured-colour-key\" style={{\"color\": colours.Confident}}>\n                <div className=\"coloured-circle\" style={{\"background\": colours.Confident}}/>\n                  Confident\n              </div>\n              <div className=\"coloured-colour-key\" style={{\"color\": colours.Anger}}>\n                <div className=\"coloured-circle\" style={{\"background\": colours.Anger}}/>\n                  Anger\n              </div>\n              <div className=\"coloured-colour-key\" style={{\"color\": colours.Joy}}>\n                <div className=\"coloured-circle\" style={{\"background\": colours.Joy}}/>\n                  Joy\n              </div>\n              <div className=\"coloured-colour-key\" style={{\"color\": colours.Sadness}}>\n                <div className=\"coloured-circle\" style={{\"background\": colours.Sadness}}/>\n                  Sadness\n              </div>\n            </div>\n            <Dashboard data={this.state.dashboardData} colourCode={colours}/>\n          </div>\n          </Route>\n        <Route path=\"/settings\">\n          <Settings></Settings>\n          </Route>\n          </Switch>\n        </Router>\n        </div>\n        \n      </div>\n    )\n        }\n        </ColourContext.Consumer>\n        \n    );\n}\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ColourProvider from './Components/ColourContext'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColourProvider>\n    <App/>\n    </ColourProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}